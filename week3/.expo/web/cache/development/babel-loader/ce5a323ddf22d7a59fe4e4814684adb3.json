{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kun\\\\Documents\\\\DevC\\\\ReactFacebook\\\\week3\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from 'react';\nimport Button from \"./components/Button_Components\";\nimport ChoiceCard from \"./components/ChoiceCard_Component\";\nvar CHOICES = [{\n  name: 'rock',\n  uri: 'http://pngimg.com/uploads/stone/stone_PNG13622.png'\n}, {\n  name: 'paper',\n  uri: 'https://www.stickpng.com/assets/images/5887c26cbc2fc2ef3a186046.png'\n}, {\n  name: 'scissors',\n  uri: 'http://pluspng.com/img-png/png-hairdressing-scissors-beauty-salon-scissors-clipart-4704.png'\n}];\n\nvar getRoundOutcome = function getRoundOutcome(userChoice) {\n  var computerChoice = randomComputerChoice().name;\n  var result;\n\n  if (userChoice === 'rock') {\n    result = computerChoice === 'scissors' ? 'Victory!' : 'Defeat!';\n  }\n\n  if (userChoice === 'paper') {\n    result = computerChoice === 'rock' ? 'Victory!' : 'Defeat!';\n  }\n\n  if (userChoice === 'scissors') {\n    result = computerChoice === 'paper' ? 'Victory!' : 'Defeat!';\n  }\n\n  if (userChoice === computerChoice) result = 'Tie game!';\n  return [result, computerChoice];\n};\n\nvar randomComputerChoice = function randomComputerChoice() {\n  return CHOICES[Math.floor(Math.random() * CHOICES.length)];\n};\n\nvar getResultColor = function getResultColor() {\n  if (gamePrompt === 'Victory!') return 'green';\n  if (gamePrompt === 'Defeat!') return 'red';\n  return null;\n};\n\nexport default function App() {\n  var _useState = useState('Choose your weapon!'),\n      _useState2 = _slicedToArray(_useState, 2),\n      gamePrompt = _useState2[0],\n      setGamePrompt = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userChoice = _useState4[0],\n      setUserChoice = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      computerChoice = _useState6[0],\n      setComputerChoice = _useState6[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }, gamePrompt), React.createElement(View, {\n    style: styles.choicesContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(ChoiceCard, {\n    player: \"Player\",\n    choice: userChoice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: '#250902'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"vs\"), React.createElement(ChoiceCard, {\n    player: \"Computer\",\n    choice: computerChoice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), CHOICES.map(function (choice) {\n    return React.createElement(Button, {\n      key: choice.name,\n      name: choice.name,\n      onPress: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 18\n      }\n    });\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e9ebee'\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonStyle: {\n    width: 200,\n    margin: 10,\n    height: 50,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#640D14'\n  },\n  buttonText: {\n    fontSize: 25,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  choicesContainer: {\n    margin: 10,\n    borderWidth: 2,\n    paddingTop: 100,\n    shadowRadius: 5,\n    paddingBottom: 100,\n    borderColor: 'grey',\n    shadowOpacity: 0.90,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    justifyContent: 'space-around',\n    shadowColor: 'rgba(0,0,0,0.2)',\n    shadowOffset: {\n      height: 5,\n      width: 5\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Kun/Documents/DevC/ReactFacebook/week3/App.js"],"names":["StatusBar","React","useState","Button","ChoiceCard","CHOICES","name","uri","getRoundOutcome","userChoice","computerChoice","randomComputerChoice","result","Math","floor","random","length","getResultColor","gamePrompt","App","setGamePrompt","setUserChoice","setComputerChoice","styles","container","choicesContainer","color","map","choice","onPress","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","buttonContainer","buttonStyle","width","margin","height","borderRadius","buttonText","fontSize","fontWeight","borderWidth","paddingTop","shadowRadius","paddingBottom","borderColor","shadowOpacity","flexDirection","shadowColor","shadowOffset"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\nimport React, { useState } from 'react';\nimport Button from \"./components/Button_Components\"\nimport ChoiceCard from \"./components/ChoiceCard_Component\"\n\nconst CHOICES = [\n  {\n    name: 'rock',\n    uri: 'http://pngimg.com/uploads/stone/stone_PNG13622.png'\n  },\n  {\n    name: 'paper',\n    uri: 'https://www.stickpng.com/assets/images/5887c26cbc2fc2ef3a186046.png'\n  },\n  {\n    name: 'scissors',\n    uri:\n      'http://pluspng.com/img-png/png-hairdressing-scissors-beauty-salon-scissors-clipart-4704.png'\n  }\n];\n\nconst getRoundOutcome = userChoice => {\n  const computerChoice = randomComputerChoice().name;\n  let result;\n\n  if (userChoice === 'rock') {\n    result = computerChoice === 'scissors' ? 'Victory!' : 'Defeat!';\n  }\n  if (userChoice === 'paper') {\n    result = computerChoice === 'rock' ? 'Victory!' : 'Defeat!';\n  }\n  if (userChoice === 'scissors') {\n    result = computerChoice === 'paper' ? 'Victory!' : 'Defeat!';\n  }\n\n  if (userChoice === computerChoice) result = 'Tie game!';\n  return [result, computerChoice];\n};\nconst randomComputerChoice = () =>\n  CHOICES[Math.floor(Math.random() * CHOICES.length)];\n\n\nconst getResultColor = () => {\n  if (gamePrompt === 'Victory!') return 'green';\n  if (gamePrompt === 'Defeat!') return 'red';\n  return null;\n};\n\nexport default function App() {\n\n  const [gamePrompt, setGamePrompt] = useState('Choose your weapon!');\n  const [userChoice, setUserChoice] = useState({});\n  const [computerChoice, setComputerChoice] = useState({});\n\n  return (\n    <View style={styles.container}>\n     <Text>{gamePrompt}</Text>\n      <View style={styles.choicesContainer}>\n        <ChoiceCard\n          player=\"Player\"\n          choice={userChoice}\n        />\n        <Text style={{ color: '#250902' }}>vs</Text>\n        <ChoiceCard\n          player=\"Computer\"\n          choice={computerChoice}\n        />\n      </View>\n      {\n        CHOICES.map(choice => {\n          return <Button key={choice.name} name={choice.name} onPress={onPress} />;\n        })\n      }\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e9ebee'\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonStyle: {\n    width: 200,\n    margin: 10,\n    height: 50,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#640D14',\n  },\n  buttonText: {\n    fontSize: 25,\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  choicesContainer: {\n    margin: 10,\n    borderWidth: 2,\n    paddingTop: 100,\n    shadowRadius: 5,\n    paddingBottom: 100,\n    borderColor: 'grey',\n    shadowOpacity: 0.90,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    justifyContent: 'space-around',\n    shadowColor: 'rgba(0,0,0,0.2)',\n    shadowOffset: { height: 5, width: 5 },\n  },\n  \n});\n"]},"metadata":{},"sourceType":"module"}