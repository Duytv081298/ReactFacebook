{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kun\\\\Documents\\\\DevC\\\\ReactFacebook\\\\week3\\\\components\\\\Button_Components.js\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from 'react';\n\nvar onPress = function onPress(playerChoice) {\n  var _getRoundOutcome = getRoundOutcome(playerChoice),\n      _getRoundOutcome2 = _slicedToArray(_getRoundOutcome, 2),\n      result = _getRoundOutcome2[0],\n      compChoice = _getRoundOutcome2[1];\n\n  var newUserChoice = CHOICES.find(function (choice) {\n    return choice.name === playerChoice;\n  });\n  var newComputerChoice = CHOICES.find(function (choice) {\n    return choice.name === compChoice;\n  });\n  setGamePrompt(result);\n  setUserChoice(newUserChoice);\n  setComputerChoice(newComputerChoice);\n};\n\nexport default function Button(props) {\n  return React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    onPress: function onPress() {\n      return props.onPress(props.name);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, props.name.charAt(0).toUpperCase() + props.name.slice(1)));\n}\nvar styles = StyleSheet.create({\n  buttonStyle: {\n    width: 200,\n    margin: 10,\n    height: 50,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#640D14'\n  },\n  buttonText: {\n    fontSize: 25,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/Kun/Documents/DevC/ReactFacebook/week3/components/Button_Components.js"],"names":["React","onPress","playerChoice","getRoundOutcome","result","compChoice","newUserChoice","CHOICES","find","choice","name","newComputerChoice","setGamePrompt","setUserChoice","setComputerChoice","Button","props","styles","buttonStyle","buttonText","charAt","toUpperCase","slice","StyleSheet","create","width","margin","height","borderRadius","alignItems","justifyContent","backgroundColor","fontSize","color","fontWeight"],"mappings":";;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,YAAY,EAAI;AAAA,yBACCC,eAAe,CAACD,YAAD,CADhB;AAAA;AAAA,MACrBE,MADqB;AAAA,MACbC,UADa;;AAG5B,MAAMC,aAAa,GAAGC,OAAO,CAACC,IAAR,CAAa,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,KAAgBR,YAApB;AAAA,GAAnB,CAAtB;AACA,MAAMS,iBAAiB,GAAGJ,OAAO,CAACC,IAAR,CAAa,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,KAAgBL,UAApB;AAAA,GAAnB,CAA1B;AAEAO,EAAAA,aAAa,CAACR,MAAD,CAAb;AACAS,EAAAA,aAAa,CAACP,aAAD,CAAb;AACAQ,EAAAA,iBAAiB,CAACH,iBAAD,CAAjB;AACD,CATH;;AAWA,eAAe,SAASI,MAAT,CAAgBC,KAAhB,EAAuB;AAClC,SACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEC,MAAM,CAACC,WADlB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMF,KAAK,CAACf,OAAN,CAAce,KAAK,CAACN,IAApB,CAAN;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACN,IAAN,CAAWU,MAAX,CAAkB,CAAlB,EAAqBC,WAArB,KAAqCL,KAAK,CAACN,IAAN,CAAWY,KAAX,CAAiB,CAAjB,CAD1C,CAJJ,CADJ;AAUH;AACD,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAE7BN,EAAAA,WAAW,EAAE;AACTO,IAAAA,KAAK,EAAE,GADE;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTC,IAAAA,MAAM,EAAE,EAHC;AAITC,IAAAA,YAAY,EAAE,EAJL;AAKTC,IAAAA,UAAU,EAAE,QALH;AAMTC,IAAAA,cAAc,EAAE,QANP;AAOTC,IAAAA,eAAe,EAAE;AAPR,GAFgB;AAW7BZ,EAAAA,UAAU,EAAE;AACRa,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,KAAK,EAAE,OAFC;AAGRC,IAAAA,UAAU,EAAE;AAHJ;AAXiB,CAAlB,CAAf","sourcesContent":["\r\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\r\nimport React from 'react';\r\n\r\n\r\nconst onPress = playerChoice => {\r\n    const [result, compChoice] = getRoundOutcome(playerChoice);\r\n  \r\n    const newUserChoice = CHOICES.find(choice => choice.name === playerChoice);\r\n    const newComputerChoice = CHOICES.find(choice => choice.name === compChoice);\r\n  \r\n    setGamePrompt(result);\r\n    setUserChoice(newUserChoice);\r\n    setComputerChoice(newComputerChoice);\r\n  };\r\n  \r\nexport default function Button(props) {\r\n    return (\r\n        <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            onPress={() => props.onPress(props.name)}\r\n        >\r\n            <Text style={styles.buttonText}>\r\n                {props.name.charAt(0).toUpperCase() + props.name.slice(1)}\r\n            </Text>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n\r\n    buttonStyle: {\r\n        width: 200,\r\n        margin: 10,\r\n        height: 50,\r\n        borderRadius: 10,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#640D14',\r\n    },\r\n    buttonText: {\r\n        fontSize: 25,\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}