{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kun\\\\Documents\\\\DevC\\\\ReactFacebook\\\\week3\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from 'react';\nimport Button from \"./components/Button_Components\";\nimport ChoiceCard from \"./components/ChoiceCard_Component\";\nvar CHOICES = [{\n  name: 'rock',\n  uri: 'https://mpng.subpng.com/20180705/sfh/kisspng-rockpaperscissors-computer-icons-clip-art-paper-scissors-5b3e1287be5a43.5750598415307946317797.jpg'\n}, {\n  name: 'paper',\n  uri: 'https://www.pinclipart.com/picdir/middle/51-511523_rock-paper-rock-paper-scissors-clipart-png-download.png'\n}, {\n  name: 'scissors',\n  uri: 'https://www.vhv.rs/dpng/d/535-5357819_rock-paper-scissors-png-transparent-png.png'\n}];\nexport default function App() {\n  var _useState = useState('Choose your weapon!'),\n      _useState2 = _slicedToArray(_useState, 2),\n      gamePrompt = _useState2[0],\n      setGamePrompt = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scores = _useState4[0],\n      setScores = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userChoice = _useState6[0],\n      setUserChoice = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      computerChoice = _useState8[0],\n      setComputerChoice = _useState8[1];\n\n  var onPress = function onPress(playerChoice) {\n    var _getRoundOutcome = getRoundOutcome(playerChoice),\n        _getRoundOutcome2 = _slicedToArray(_getRoundOutcome, 2),\n        result = _getRoundOutcome2[0],\n        compChoice = _getRoundOutcome2[1];\n\n    var newUserChoice = CHOICES.find(function (choice) {\n      return choice.name === playerChoice;\n    });\n    var newComputerChoice = CHOICES.find(function (choice) {\n      return choice.name === compChoice;\n    });\n    setGamePrompt(result);\n    setScores(getScores());\n    setUserChoice(newUserChoice);\n    setComputerChoice(newComputerChoice);\n  };\n\n  var getRoundOutcome = function getRoundOutcome(userChoice) {\n    var computerChoice = randomComputerChoice().name;\n    var result;\n\n    if (userChoice === 'rock') {\n      result = computerChoice === 'scissors' ? 'Victory!' : 'Defeat!';\n    }\n\n    if (userChoice === 'paper') {\n      result = computerChoice === 'rock' ? 'Victory!' : 'Defeat!';\n    }\n\n    if (userChoice === 'scissors') {\n      result = computerChoice === 'paper' ? 'Victory!' : 'Defeat!';\n    }\n\n    if (userChoice === computerChoice) result = 'Tie game!';\n    return [result, computerChoice];\n  };\n\n  var randomComputerChoice = function randomComputerChoice() {\n    return CHOICES[Math.floor(Math.random() * CHOICES.length)];\n  };\n\n  var getResultColor = function getResultColor() {\n    var newScores = scores;\n\n    if (gamePrompt === 'Victory!') {\n      newScores = scores + 1;\n      return 'green';\n    }\n\n    if (gamePrompt === 'Defeat!') {\n      newScores = scores - 1;\n      return 'red';\n    }\n\n    return null;\n  };\n\n  var getScores = function getScores() {\n    var newScores = scores;\n    if (gamePrompt === 'Victory!') newScores = scores + 1;else if (gamePrompt === 'Defeat!' && newScores <= 0) newScores = 0;else if (gamePrompt === 'Defeat!') newScores = scores - 1;\n    return newScores;\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 35,\n      color: getResultColor()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, gamePrompt), React.createElement(View, {\n    style: styles.choicesContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(ChoiceCard, {\n    player: \"Player\",\n    choice: userChoice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: '#250902'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"vs\"), React.createElement(ChoiceCard, {\n    player: \"Computer\",\n    choice: computerChoice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), CHOICES.map(function (choice) {\n    return React.createElement(Button, {\n      key: choice.name,\n      name: choice.name,\n      onPress: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }\n    });\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Scores : \", scores));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e9ebee'\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonStyle: {\n    width: 200,\n    margin: 10,\n    height: 50,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#640D14'\n  },\n  buttonText: {\n    fontSize: 25,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  choicesContainer: {\n    margin: 10,\n    borderWidth: 2,\n    paddingTop: 100,\n    shadowRadius: 5,\n    paddingBottom: 100,\n    borderColor: 'grey',\n    shadowOpacity: 0.90,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    justifyContent: 'space-around',\n    shadowColor: 'rgba(0,0,0,0.2)',\n    shadowOffset: {\n      height: 5,\n      width: 5\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Kun/Documents/DevC/ReactFacebook/week3/App.js"],"names":["StatusBar","React","useState","Button","ChoiceCard","CHOICES","name","uri","App","gamePrompt","setGamePrompt","scores","setScores","userChoice","setUserChoice","computerChoice","setComputerChoice","onPress","playerChoice","getRoundOutcome","result","compChoice","newUserChoice","find","choice","newComputerChoice","getScores","randomComputerChoice","Math","floor","random","length","getResultColor","newScores","styles","container","fontSize","color","choicesContainer","map","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","buttonContainer","buttonStyle","width","margin","height","borderRadius","buttonText","fontWeight","borderWidth","paddingTop","shadowRadius","paddingBottom","borderColor","shadowOpacity","flexDirection","shadowColor","shadowOffset"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\nimport React, { useState } from 'react';\nimport Button from \"./components/Button_Components\"\nimport ChoiceCard from \"./components/ChoiceCard_Component\"\n\nconst CHOICES = [\n  {\n    name: 'rock',\n    uri: 'https://mpng.subpng.com/20180705/sfh/kisspng-rockpaperscissors-computer-icons-clip-art-paper-scissors-5b3e1287be5a43.5750598415307946317797.jpg'\n  },\n  {\n    name: 'paper',\n    uri: 'https://www.pinclipart.com/picdir/middle/51-511523_rock-paper-rock-paper-scissors-clipart-png-download.png'\n  },\n  {\n    name: 'scissors',\n    uri:'https://www.vhv.rs/dpng/d/535-5357819_rock-paper-scissors-png-transparent-png.png'\n  }\n];\n\n\nexport default function App() {\n\n  const [gamePrompt, setGamePrompt] = useState('Choose your weapon!');\n  const [scores, setScores] = useState(0);\n  const [userChoice, setUserChoice] = useState({});\n  const [computerChoice, setComputerChoice] = useState({});\n\n  const onPress = playerChoice => {\n    const [result, compChoice] = getRoundOutcome(playerChoice);\n\n    const newUserChoice = CHOICES.find(choice => choice.name === playerChoice);\n    const newComputerChoice = CHOICES.find(choice => choice.name === compChoice);\n\n    setGamePrompt(result);\n    setScores(getScores());\n    setUserChoice(newUserChoice);\n    setComputerChoice(newComputerChoice);\n  };\n  const getRoundOutcome = userChoice => {\n    const computerChoice = randomComputerChoice().name;\n    let result;\n\n    if (userChoice === 'rock') {\n      result = computerChoice === 'scissors' ? 'Victory!' : 'Defeat!';\n    }\n    if (userChoice === 'paper') {\n      result = computerChoice === 'rock' ? 'Victory!' : 'Defeat!';\n    }\n    if (userChoice === 'scissors') {\n      result = computerChoice === 'paper' ? 'Victory!' : 'Defeat!';\n    }\n\n    if (userChoice === computerChoice) result = 'Tie game!';\n    return [result, computerChoice];\n  };\n  const randomComputerChoice = () =>\n    CHOICES[Math.floor(Math.random() * CHOICES.length)];\n\n\n  const getResultColor = () => {\n    let newScores = scores ;\n    if (gamePrompt === 'Victory!') {\n      newScores = scores + 1;\n      return 'green';}\n    if (gamePrompt === 'Defeat!'){\n      newScores = scores - 1;\n      return 'red';\n    } \n    return null;\n  };\n  const getScores = () => {\n    let newScores = scores ;\n    if (gamePrompt === 'Victory!')  newScores = scores + 1;\n    else if (gamePrompt === 'Defeat!' && newScores <= 0) newScores = 0;\n    else if (gamePrompt === 'Defeat!')newScores = scores - 1;\n    return newScores\n  };\n\n  \n\n  return (\n    <View style={styles.container}>\n      <Text style={{ fontSize: 35, color: getResultColor() }}>{gamePrompt}</Text>\n      <View style={styles.choicesContainer}>\n        <ChoiceCard\n          player=\"Player\"\n          choice={userChoice}\n        />\n        <Text style={{ color: '#250902' }}>vs</Text>\n        <ChoiceCard\n          player=\"Computer\"\n          choice={computerChoice}\n        />\n      </View>\n      {\n        CHOICES.map(choice => {\n          return <Button key={choice.name} name={choice.name} onPress={onPress} />;\n        })\n      }\n      <Text style={{ fontSize: 35,  }}>Scores : {scores}</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e9ebee'\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonStyle: {\n    width: 200,\n    margin: 10,\n    height: 50,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#640D14',\n  },\n  buttonText: {\n    fontSize: 25,\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  choicesContainer: {\n    margin: 10,\n    borderWidth: 2,\n    paddingTop: 100,\n    shadowRadius: 5,\n    paddingBottom: 100,\n    borderColor: 'grey',\n    shadowOpacity: 0.90,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    justifyContent: 'space-around',\n    shadowColor: 'rgba(0,0,0,0.2)',\n    shadowOffset: { height: 5, width: 5 },\n  },\n\n});\n"]},"metadata":{},"sourceType":"module"}