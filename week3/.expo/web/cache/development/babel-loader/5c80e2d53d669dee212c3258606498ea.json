{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kun\\\\Documents\\\\DevC\\\\ReactFacebook\\\\week3\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from 'react';\nimport Button1 from \"./components/Button_Components\";\nvar CHOICES = [{\n  name: 'rock',\n  uri: 'http://pngimg.com/uploads/stone/stone_PNG13622.png'\n}, {\n  name: 'paper',\n  uri: 'https://www.stickpng.com/assets/images/5887c26cbc2fc2ef3a186046.png'\n}, {\n  name: 'scissors',\n  uri: 'http://pluspng.com/img-png/png-hairdressing-scissors-beauty-salon-scissors-clipart-4704.png'\n}];\n\nvar Button = function Button(props) {\n  return React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    onPress: function onPress() {\n      return props.onPress(props.name);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, props.name.charAt(0).toUpperCase() + props.name.slice(1)));\n};\n\nvar onPress = function onPress(playerChoice) {\n  var _getRoundOutcome = getRoundOutcome(playerChoice),\n      _getRoundOutcome2 = _slicedToArray(_getRoundOutcome, 2),\n      result = _getRoundOutcome2[0],\n      compChoice = _getRoundOutcome2[1];\n\n  var newUserChoice = CHOICES.find(function (choice) {\n    return choice.name === playerChoice;\n  });\n  var newComputerChoice = CHOICES.find(function (choice) {\n    return choice.name === compChoice;\n  });\n  setGamePrompt(result);\n  setUserChoice(newUserChoice);\n  setComputerChoice(newComputerChoice);\n};\n\nvar getRoundOutcome = function getRoundOutcome(userChoice) {\n  var computerChoice = randomComputerChoice().name;\n  var result;\n\n  if (userChoice === 'rock') {\n    result = computerChoice === 'scissors' ? 'Victory!' : 'Defeat!';\n  }\n\n  if (userChoice === 'paper') {\n    result = computerChoice === 'rock' ? 'Victory!' : 'Defeat!';\n  }\n\n  if (userChoice === 'scissors') {\n    result = computerChoice === 'paper' ? 'Victory!' : 'Defeat!';\n  }\n\n  if (userChoice === computerChoice) result = 'Tie game!';\n  return [result, computerChoice];\n};\n\nvar randomComputerChoice = function randomComputerChoice() {\n  return CHOICES[Math.floor(Math.random() * CHOICES.length)];\n};\n\nvar ChoiceCard = function ChoiceCard(_ref) {\n  var player = _ref.player,\n      _ref$choice = _ref.choice,\n      uri = _ref$choice.uri,\n      name = _ref$choice.name;\n  var title = name && name.charAt(0).toUpperCase() + name.slice(1);\n  return React.createElement(View, {\n    style: styles.choiceContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.choiceDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, player), React.createElement(Image, {\n    source: {\n      uri: uri\n    },\n    resizeMode: \"contain\",\n    style: styles.choiceImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.choiceCardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nvar getResultColor = function getResultColor() {\n  if (gamePrompt === 'Victory!') return 'green';\n  if (gamePrompt === 'Defeat!') return 'red';\n  return null;\n};\n\nexport default function App() {\n  var _useState = useState('Choose your weapon!'),\n      _useState2 = _slicedToArray(_useState, 2),\n      gamePrompt = _useState2[0],\n      setGamePrompt = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userChoice = _useState4[0],\n      setUserChoice = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      computerChoice = _useState6[0],\n      setComputerChoice = _useState6[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 35,\n      color: getResultColor()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 6\n    }\n  }, gamePrompt), React.createElement(View, {\n    style: styles.choicesContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(ChoiceCard, {\n    player: \"Player\",\n    choice: userChoice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: '#250902'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"vs\"), React.createElement(ChoiceCard, {\n    player: \"Computer\",\n    choice: computerChoice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), CHOICES.map(function (choice) {\n    return React.createElement(Button, {\n      key: choice.name,\n      name: choice.name,\n      onPress: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 18\n      }\n    });\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e9ebee'\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonStyle: {\n    width: 200,\n    margin: 10,\n    height: 50,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#640D14'\n  },\n  buttonText: {\n    fontSize: 25,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  choicesContainer: {\n    margin: 10,\n    borderWidth: 2,\n    paddingTop: 100,\n    shadowRadius: 5,\n    paddingBottom: 100,\n    borderColor: 'grey',\n    shadowOpacity: 0.90,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    justifyContent: 'space-around',\n    shadowColor: 'rgba(0,0,0,0.2)',\n    shadowOffset: {\n      height: 5,\n      width: 5\n    }\n  },\n  choiceContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  choiceDescription: {\n    fontSize: 25,\n    color: '#250902',\n    fontWeight: 'bold',\n    textDecorationLine: 'underline'\n  },\n  choiceCardTitle: {\n    fontSize: 30,\n    color: '#250902'\n  },\n  choiceImage: {\n    width: 150,\n    height: 150,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Kun/Documents/DevC/ReactFacebook/week3/App.js"],"names":["StatusBar","React","useState","Button1","CHOICES","name","uri","Button","props","styles","buttonStyle","onPress","buttonText","charAt","toUpperCase","slice","playerChoice","getRoundOutcome","result","compChoice","newUserChoice","find","choice","newComputerChoice","setGamePrompt","setUserChoice","setComputerChoice","userChoice","computerChoice","randomComputerChoice","Math","floor","random","length","ChoiceCard","player","title","choiceContainer","choiceDescription","choiceImage","choiceCardTitle","getResultColor","gamePrompt","App","container","fontSize","color","choicesContainer","map","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","buttonContainer","width","margin","height","borderRadius","fontWeight","borderWidth","paddingTop","shadowRadius","paddingBottom","borderColor","shadowOpacity","flexDirection","shadowColor","shadowOffset","textDecorationLine","padding"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\nimport React, { useState } from 'react';\nimport Button1 from \"./components/Button_Components\"\n\nconst CHOICES = [\n  {\n    name: 'rock',\n    uri: 'http://pngimg.com/uploads/stone/stone_PNG13622.png'\n  },\n  {\n    name: 'paper',\n    uri: 'https://www.stickpng.com/assets/images/5887c26cbc2fc2ef3a186046.png'\n  },\n  {\n    name: 'scissors',\n    uri:\n      'http://pluspng.com/img-png/png-hairdressing-scissors-beauty-salon-scissors-clipart-4704.png'\n  }\n];\n\nconst Button = props => (\n  <TouchableOpacity\n    style={styles.buttonStyle}\n    onPress={() => props.onPress(props.name)}\n  >\n    <Text style={styles.buttonText}>\n      {props.name.charAt(0).toUpperCase() + props.name.slice(1)}\n    </Text>\n  </TouchableOpacity>\n);\n// const onPress = userChoice => {\n//   console.log('userChoice', userChoice);\n// };\nconst onPress = playerChoice => {\n  const [result, compChoice] = getRoundOutcome(playerChoice);\n\n  const newUserChoice = CHOICES.find(choice => choice.name === playerChoice);\n  const newComputerChoice = CHOICES.find(choice => choice.name === compChoice);\n\n  setGamePrompt(result);\n  setUserChoice(newUserChoice);\n  setComputerChoice(newComputerChoice);\n};\nconst getRoundOutcome = userChoice => {\n  const computerChoice = randomComputerChoice().name;\n  let result;\n\n  if (userChoice === 'rock') {\n    result = computerChoice === 'scissors' ? 'Victory!' : 'Defeat!';\n  }\n  if (userChoice === 'paper') {\n    result = computerChoice === 'rock' ? 'Victory!' : 'Defeat!';\n  }\n  if (userChoice === 'scissors') {\n    result = computerChoice === 'paper' ? 'Victory!' : 'Defeat!';\n  }\n\n  if (userChoice === computerChoice) result = 'Tie game!';\n  return [result, computerChoice];\n};\nconst randomComputerChoice = () =>\n  CHOICES[Math.floor(Math.random() * CHOICES.length)];\n\nconst ChoiceCard = ({ player, choice: { uri, name } }) => {\n  const title = name && name.charAt(0).toUpperCase() + name.slice(1);\n\n  return (\n    <View style={styles.choiceContainer}>\n      <Text style={styles.choiceDescription}>{player}</Text>\n      <Image source={{ uri }} resizeMode=\"contain\" style={styles.choiceImage} />\n      <Text style={styles.choiceCardTitle}>{title}</Text>\n    </View>\n  );\n};\n\nconst getResultColor = () => {\n  if (gamePrompt === 'Victory!') return 'green';\n  if (gamePrompt === 'Defeat!') return 'red';\n  return null;\n};\n\nexport default function App() {\n\n  const [gamePrompt, setGamePrompt] = useState('Choose your weapon!');\n  const [userChoice, setUserChoice] = useState({});\n  const [computerChoice, setComputerChoice] = useState({});\n\n  return (\n    <View style={styles.container}>\n     <Text style={{ fontSize: 35, color: getResultColor() }}>{gamePrompt}</Text>\n      <View style={styles.choicesContainer}>\n        <ChoiceCard\n          player=\"Player\"\n          choice={userChoice}\n        />\n        <Text style={{ color: '#250902' }}>vs</Text>\n        <ChoiceCard\n          player=\"Computer\"\n          choice={computerChoice}\n        />\n      </View>\n      {\n        CHOICES.map(choice => {\n          return <Button key={choice.name} name={choice.name} onPress={onPress} />;\n        })\n      }\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e9ebee'\n  },\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonStyle: {\n    width: 200,\n    margin: 10,\n    height: 50,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#640D14',\n  },\n  buttonText: {\n    fontSize: 25,\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  choicesContainer: {\n    margin: 10,\n    borderWidth: 2,\n    paddingTop: 100,\n    shadowRadius: 5,\n    paddingBottom: 100,\n    borderColor: 'grey',\n    shadowOpacity: 0.90,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    justifyContent: 'space-around',\n    shadowColor: 'rgba(0,0,0,0.2)',\n    shadowOffset: { height: 5, width: 5 },\n  },\n  choiceContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  choiceDescription: {\n    fontSize: 25,\n    color: '#250902',\n    fontWeight: 'bold',\n    textDecorationLine: 'underline'\n  },\n  choiceCardTitle: {\n    fontSize: 30,\n    color: '#250902'\n  },\n  choiceImage: {\n    width: 150,\n    height: 150,\n    padding: 10,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}